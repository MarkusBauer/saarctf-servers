{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 5,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 6,
      "panels": [],
      "title": "General",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "DS_CTF_DB"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 50,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 180000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels[\"name\"]}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.3.1",
      "targets": [
        {
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT \"start\" AS \"time\", \n  CASE WHEN status = 'SUCCESS' THEN ' SUCCESS' ELSE status END AS \"name\", \n  \"value\"\nFROM (\n\tSELECT tick, status, COUNT(*) AS \"value\"\n\tFROM checker_results \n\tWHERE service_id = $service AND tick >= 0\n\tGROUP BY tick, status\n\tORDER BY tick ASC\n) AS checker_results\nJOIN ticks ON checker_results.tick = ticks.tick",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Service Checker Status",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "DS_CTF_DB"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 180000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line"
            }
          },
          "mappings": [
            {
              "options": {
                "limit": {
                  "index": 0,
                  "text": "timeout"
                }
              },
              "type": "value"
            }
          ],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.3.1",
      "targets": [
        {
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT \"start\" AS \"time\", \"value\" AS \"avg. checker time\"\nFROM (\n\tSELECT tick, AVG(time) AS \"value\"\n\tFROM checker_results \n\tWHERE service_id = $service AND tick >= 0\n\tGROUP BY tick\n\tORDER BY tick ASC\n) AS checker_results\nJOIN ticks ON checker_results.tick = ticks.tick",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "DS_CTF_DB"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT \"start\" AS \"time\", \"value\" AS \"avg. successful checker time\"\nFROM (\n\tSELECT tick, AVG(time) AS \"value\"\n\tFROM checker_results \n\tWHERE service_id = $service AND tick >= 0 AND status = 'SUCCESS'\n\tGROUP BY tick\n\tORDER BY tick ASC\n) AS checker_results\nJOIN ticks ON checker_results.tick = ticks.tick",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "DS_CTF_DB"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT \"start\" AS \"time\", \"value\" AS \"max. checker time\"\nFROM (\n\tSELECT tick, MAX(time) AS \"value\"\n\tFROM checker_results \n\tWHERE service_id = $service AND tick >= 0\n\tGROUP BY tick\n\tORDER BY tick ASC\n) AS checker_results\nJOIN ticks ON checker_results.tick = ticks.tick",
          "refId": "C",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "grafana-postgresql-datasource",
            "uid": "DS_CTF_DB"
          },
          "editorMode": "code",
          "format": "time_series",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT start AS \"time\", (SELECT checker_timeout FROM services WHERE id=$service) AS \"timeout limit\"\nFROM ticks\n",
          "refId": "D",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Checker RuntIme",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "DS_CTF_DB"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 120000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 180000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels[\"name\"]}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 9
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true,
          "width": 270
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.3.1",
      "targets": [
        {
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT ticks.\"start\" AS \"time\", CONCAT('flagstore ', payload) AS \"name\", \"value\"\nFROM (\n\tSELECT tick_submitted, service_id, payload, COUNT(DISTINCT submitted_by) AS \"value\" \n\tFROM submitted_flags \n\tWHERE service_id = $service \n\tGROUP BY tick_submitted, service_id, payload\n\tORDER BY tick_submitted\n)\nJOIN ticks ON tick = tick_submitted;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "alias": "\"time\"",
                "name": "MIN",
                "parameters": [
                  {
                    "name": "ts",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "alias": "\"service\"",
                "parameters": [
                  {
                    "name": "service_id",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "alias": "\"payload\"",
                "parameters": [
                  {
                    "name": "payload",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "alias": "\"value\"",
                "name": "COUNT",
                "parameters": [
                  {
                    "name": "*",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "service_id",
                  "type": "string"
                },
                "type": "groupBy"
              },
              {
                "property": {
                  "name": "payload",
                  "type": "string"
                },
                "type": "groupBy"
              },
              {
                "property": {
                  "name": "round_submitted",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "submitted_flags"
        }
      ],
      "title": "Attackers",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "DS_CTF_DB"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 120000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 180000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels[\"name\"]}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 9
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true,
          "width": 270
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.3.1",
      "targets": [
        {
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT ticks.\"start\" AS \"time\", CONCAT('flagstore ', payload) AS \"name\", \"value\"\nFROM (\n\tSELECT tick_submitted, service_id, payload, COUNT(DISTINCT team_id) AS \"value\" \n\tFROM submitted_flags \n\tWHERE service_id = $service \n\tGROUP BY tick_submitted, service_id, payload\n\tORDER BY tick_submitted\n)\nJOIN ticks ON tick = tick_submitted;",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "alias": "\"time\"",
                "name": "MIN",
                "parameters": [
                  {
                    "name": "ts",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "alias": "\"service\"",
                "parameters": [
                  {
                    "name": "service_id",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "alias": "\"payload\"",
                "parameters": [
                  {
                    "name": "payload",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "alias": "\"value\"",
                "name": "COUNT",
                "parameters": [
                  {
                    "name": "*",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "service_id",
                  "type": "string"
                },
                "type": "groupBy"
              },
              {
                "property": {
                  "name": "payload",
                  "type": "string"
                },
                "type": "groupBy"
              },
              {
                "property": {
                  "name": "round_submitted",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "submitted_flags"
        }
      ],
      "title": "Victims",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 7,
      "panels": [],
      "repeat": "payload",
      "title": "Flagstore $payload",
      "type": "row"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "DS_CTF_DB"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 120000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 180000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "displayName": "${__field.labels[\"name\"]}",
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 18
      },
      "id": 8,
      "options": {
        "legend": {
          "calcs": [
            "max",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Max",
          "sortDesc": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "11.3.1",
      "targets": [
        {
          "editorMode": "code",
          "format": "time_series",
          "rawQuery": true,
          "rawSql": "SELECT ticks.\"start\" AS \"time\", CONCAT('#', teams.id, ' ', teams.name) AS \"name\", \"value\"\nFROM (\n\tSELECT tick_submitted, submitted_by, COUNT(DISTINCT team_id) AS \"value\" \n\tFROM submitted_flags \n\tWHERE service_id = $service AND payload = $payload\n\tGROUP BY tick_submitted, submitted_by, service_id\n\tORDER BY tick_submitted\n)\nJOIN ticks ON tick = tick_submitted\nJOIN teams ON submitted_by = teams.id",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "alias": "\"time\"",
                "name": "MIN",
                "parameters": [
                  {
                    "name": "ts",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "alias": "\"service\"",
                "parameters": [
                  {
                    "name": "service_id",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "alias": "\"payload\"",
                "parameters": [
                  {
                    "name": "payload",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              },
              {
                "alias": "\"value\"",
                "name": "COUNT",
                "parameters": [
                  {
                    "name": "*",
                    "type": "functionParameter"
                  }
                ],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "name": "service_id",
                  "type": "string"
                },
                "type": "groupBy"
              },
              {
                "property": {
                  "name": "payload",
                  "type": "string"
                },
                "type": "groupBy"
              },
              {
                "property": {
                  "name": "round_submitted",
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          },
          "table": "submitted_flags"
        }
      ],
      "title": "# Victims by Attacker (Flagstore $payload)",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "grafana-postgresql-datasource",
        "uid": "DS_CTF_DB"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "type": "auto"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 18
      },
      "id": 9,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "11.3.1",
      "repeatDirection": "h",
      "targets": [
        {
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT CONCAT('#', submitted_by, ' ', teams.name) AS \"Team\", \n  MIN(ts) AS \"first exploited\", \n  CASE WHEN MIN(ts) FILTER (WHERE victims >= 10) IS NOT NULL\n    THEN CONCAT(age(date_trunc('second', MIN(ts) FILTER (WHERE victims >= 10)), date_trunc('second', MIN(ts))), ' later')\n    ELSE 'never'\n  END AS \"... >= 10 teams\", \n  MAX(victims) AS \"max. victims\", \n  SUM(flags) AS \"total flags\"\nFROM (\n\tSELECT tick_submitted, submitted_by, MIN(ts) AS ts, COUNT(*) AS flags, COUNT(DISTINCT team_id) AS \"victims\" \n\tFROM submitted_flags \n\tWHERE service_id = $service AND payload = $payload\n\tGROUP BY tick_submitted, submitted_by\n)\nJOIN teams ON submitted_by = teams.id\nGROUP BY submitted_by, teams.name\nORDER BY MIN(ts)",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Exploiters for $service, Flagstore $payload",
      "type": "table"
    }
  ],
  "preload": false,
  "schemaVersion": 40,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "BTX",
          "value": "2"
        },
        "definition": "SELECT CONCAT(id, ' ', name) AS label FROM services\nORDER BY id",
        "label": "Service",
        "name": "service",
        "options": [],
        "query": "SELECT CONCAT(id, ' ', name) AS label FROM services\nORDER BY id",
        "refresh": 1,
        "regex": "/(?<value>\\d+) (?<text>.*)/",
        "type": "query"
      },
      {
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "definition": "SELECT generate_series(0, num_payloads - 1) FROM services WHERE id = $service",
        "hide": 1,
        "includeAll": true,
        "name": "payload",
        "options": [],
        "query": "SELECT generate_series(0, num_payloads - 1) FROM services WHERE id = $service",
        "refresh": 1,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Service",
  "uid": "be6sb71tj81dsd",
  "version": 11,
  "weekStart": ""
}